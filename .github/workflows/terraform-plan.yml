name: Terraform Plan
on:
  pull_request:
    branches: [ main, develop ]
    paths: [ 'terraform/**' ]

env:
  TF_VERSION: '1.5.0'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, qa, prod]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets[format('AWS_ROLE_ARN_{0}', matrix.environment)] }}
          role-session-name: terraform-plan-${{ matrix.environment }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets[format('TF_STATE_BUCKET_{0}', matrix.environment)] }}" \
            -backend-config="key=${{ matrix.environment }}/terraform.tfstate" \
            -backend-config="region=us-east-1" \
            -backend-config="dynamodb_table=${{ secrets[format('TF_STATE_LOCK_TABLE_{0}', matrix.environment)] }}"

      - name: Terraform Workspace
        working-directory: terraform
        run: |
          terraform workspace select ${{ matrix.environment }} || terraform workspace new ${{ matrix.environment }}

      - name: Terraform Plan
        working-directory: terraform
        run: |
          terraform plan \
            -var-file=tfvars/${{ matrix.environment }}.tfvars \
            -var="environment=${{ matrix.environment }}" \
            -out=${{ matrix.environment }}.tfplan \
            -no-color

      - name: Upload Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan-${{ matrix.environment }}
          path: terraform/${{ matrix.environment }}.tfplan

      - name: Comment Plan on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const { execSync } = require('child_process');
            
            try {
              const planOutput = execSync('cd terraform && terraform show -no-color ${{ matrix.environment }}.tfplan', { encoding: 'utf8' });
              
              const comment = `## Terraform Plan Results for ${{ matrix.environment }}
              
              <details>
              <summary>Show Plan</summary>
              
              \`\`\`
              ${planOutput}
              \`\`\`
              
              </details>`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Error creating plan comment:', error);
            }
