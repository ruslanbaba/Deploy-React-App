name: Deploy React App to EC2 via SSM

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/**'

jobs:
  deploy:
    name: Build and Deploy React App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check AWS CLI version
        run: aws --version

      - name: Parse bucket_name from tfvars
        id: tfvars
        run: |
          BUCKET=$(grep '^bucket_name' terraform/tfvars/us-east-1.tfvars | cut -d'=' -f2 | tr -d '" ')
          echo "bucket_name=$BUCKET" >> $GITHUB_OUTPUT

      - name: Build React App
        run: |
          npm install
          npm run build
          zip -r build.zip build

      - name: Upload build.zip to S3
        run: |
          aws s3 cp build.zip s3://${{ steps.tfvars.outputs.bucket_name }}/react-app/build.zip --region us-east-1
          aws s3 ls s3://${{ steps.tfvars.outputs.bucket_name }}/react-app/build.zip --region us-east-1 || exit 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get EC2 Instance ID by tag
        id: ec2
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --region us-east-1 \
            --filters "Name=tag:Name,Values=test-react-app" "Name=instance-state-name,Values=running" \
            --query "Reservations[].Instances[].InstanceId" \
            --output text)
          echo "instance_id=$INSTANCE_ID" >> $GITHUB_OUTPUT
          echo "INSTANCE_ID=$INSTANCE_ID"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy React App via SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy React app from S3" \
            --instance-ids "${{ steps.ec2.outputs.instance_id }}" \
            --parameters 'commands=[
              "sudo yum install -y unzip httpd",
              "sudo systemctl enable httpd && sudo systemctl start httpd",
              "aws s3 cp s3://${{ steps.tfvars.outputs.bucket_name }}/react-app/build.zip /tmp/build.zip --region us-east-1",
              "sudo unzip -o /tmp/build.zip -d /tmp/",
              "sudo mkdir -p /var/www/html",
              "sudo rm -rf /var/www/html/*",
              "if [ -d /tmp/build ]; then sudo mv /tmp/build/* /var/www/html/; fi",
              "sudo rm -rf /tmp/build /tmp/build.zip",
              "echo \"RewriteEngine On\nRewriteBase /\nRewriteRule ^index\\.html$ - [L]\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule . /index.html [L]\" | sudo tee /var/www/html/.htaccess",
              "sudo systemctl restart httpd"
            ]' \
            --region us-east-1 \
            --output text
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
