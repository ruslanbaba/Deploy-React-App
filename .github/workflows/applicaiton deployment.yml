name: Deploy React App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy React to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Build React App
        run: |
          npm install
          npm run build

      - name: Upload React Build to S3
        run: |
          aws s3 sync build/ s3://${{ secrets.REACT_DEPLOY_BUCKET }}/ --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get EC2 Instance ID
        id: ec2
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=react-app-server" \
            --query "Reservations[].Instances[].InstanceId" \
            --output text)
          echo "instance_id=$INSTANCE_ID" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to EC2 using SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy React app to Apache" \
            --instance-ids "${{ steps.ec2.outputs.instance_id }}" \
            --parameters 'commands=[
              "sudo yum install -y httpd",
              "sudo systemctl start httpd",
              "sudo systemctl enable httpd",
              "sudo mkdir -p /var/www/html",
              "sudo aws s3 sync s3://${{ secrets.REACT_DEPLOY_BUCKET }}/ /var/www/html/"
            ]' \
            --region us-east-1 \
            --output text
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
